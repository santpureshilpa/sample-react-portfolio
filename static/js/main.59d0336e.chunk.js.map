{"version":3,"sources":["components/SideNav/SideNav.js","constants/About.js","components/About/About.js","constants/Skills.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","constants/Projects.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","src","alt","onClick","about","heading","About","props","bio","skills","quote","techSkills","industryKnowledge","interpersonalSkills","SkillCard","skill","Skills","map","projects","projectList","name","description","link","ProjectCard","project","href","Projects","SectionContainer","selectedHeading","selectedSection","selectedQuote","Portfolio","App","sectionName","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yZAOaA,G,kBAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACtB,OACI,yBAAKC,UAAU,WAEX,yBACDC,IAAI,yGACHD,UAAU,SACVE,IAAI,WAIhB,wBAAIF,UAAU,aAAd,mBACY,uBAAGA,UAAU,YAAb,2BACA,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,uBAAuBG,QAAU,kBAAMJ,EAAmB,WAAvE,YACA,uBAAGC,UAAU,uBAAuBG,QAAU,kBAAMJ,EAAmB,YAAvE,UACA,uBAAGC,UAAU,uBAAuBG,QAAU,kBAAMJ,EAAmB,cAAvE,gBCvBHK,EAAQ,CACjBC,QAAS,WACT,MAAS,4EACT,IAAO,oTCEEC,G,MAAO,SAACC,GACjB,OACI,yBAAKP,UAAU,mBACVI,EAAMI,OCRNC,EAAS,CAClBJ,QAAS,SACTK,MAAO,qCACPC,WAAY,CACR,aACA,SACA,UACA,MACA,IACA,OACA,SACA,OACA,MACA,QACA,MACA,SACA,WAEJC,kBAAmB,CACf,WACA,YACA,YACA,WACA,kBACA,mBACA,cACA,WACA,WACA,UACA,SACA,MACA,WAGJC,oBAAqB,CACjB,gBACA,kBACA,aACA,eClCKC,G,MAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OACI,yBAAKf,UAAU,cACVe,KCAAC,G,MAAS,SAACT,GACnB,OACI,yBAAKP,UAAU,oBAEX,2CACA,yBAAKA,UAAU,4BAEPS,EAAOE,WAAWM,KAAI,SAAAF,GAAK,OAAI,kBAAC,EAAD,CAAWA,MAAOA,QAGzD,oDACA,yBAAKf,UAAU,4BAEPS,EAAOI,oBAAoBI,KAAI,SAAAF,GAAK,OAAI,kBAAC,EAAD,CAAWA,MAAOA,WCpBjEG,EAAW,CACpBb,QAAS,WACTK,MAAO,gEACPS,YAAa,CACT,CACIC,KAAM,YACNC,YAAc,wDACdC,KAAM,mDACP,CACCF,KAAM,YACNC,YAAa,yEACbC,KAAM,iDACP,CACCF,KAAM,YACNC,YAAa,gEACbC,KAAM,iDACP,CACCF,KAAM,YACNC,YAAa,oHACbC,KAAM,wDCfLC,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OACI,yBAAKxB,UAAU,gBACX,2BAAG,oCAAH,IAAiBwB,EAAQJ,MACzB,2BAAG,2CAAH,IAAwBI,EAAQH,aAChC,2BAAG,oCAAH,IAAgB,uBAAGI,KAAMD,EAAQF,MAAOE,EAAQF,MAAhD,QCFCI,G,MAAW,SAAC,GAAY,EAAXnB,MACtB,OACI,yBAAKP,UAAU,sBAGHkB,EAASC,YAAYF,KAAI,SAAAO,GAAO,OAAI,kBAAC,EAAD,CAAaA,QAASA,UCHjEG,G,MAAmB,SAAC,GAA0E,EAAzEvB,MAAyE,EAAnEK,OAAmE,EAA5DS,SAA6D,IAApDU,EAAmD,EAAnDA,gBAAgBC,EAAmC,EAAnCA,gBAAgBC,EAAmB,EAAnBA,cAEpF,OACI,yBAAK9B,UAAU,qBACX,yBAAKA,UAAU,6BACvB,wBAAIA,UAAU,gBAAgB4B,GAC9B,uBAAG5B,UAAU,cAAc8B,IAEnB,yBAAK9B,UAAU,qBAGX,CACII,MAAO,kBAAC,EAAD,MACPK,OAAQ,kBAAC,EAAD,MACRS,SAAU,kBAAC,EAAD,OACZW,OChBLE,EAAY,SAAC,GAAmG,IAAlGhC,EAAiG,EAAjGA,mBAAoBK,EAA6E,EAA7EA,MAAOK,EAAsE,EAAtEA,OAAQS,EAA8D,EAA9DA,SAAUW,EAAoD,EAApDA,gBAAiBD,EAAmC,EAAnCA,gBAAgBE,EAAmB,EAAnBA,cAErG,OACG,yBAAK9B,UAAU,uBACX,yBAAKA,UAAU,qBACZ,kBAAC,EAAD,CACGD,mBAAoBA,KAE1B,yBAAKC,UAAU,0BACZ,kBAAC,EAAD,CACAI,MAAOA,EACPK,OAAQA,EACRS,SAAUA,EACVW,gBAAiBA,EACjBD,gBAAiBA,EACjBE,cAAeA,OCoCdE,EAlDf,kDACI,aAAc,IAAD,8BACT,gBAqBJjC,mBAAqB,SAACkC,GAClB,EAAKC,SAAS,CACVL,gBAAiBI,EACjBL,gBAAiB,EAAKO,MAAMF,GAAa5B,QACzCyB,cAAe,EAAKK,MAAMF,GAAavB,SAvB3C,EAAKyB,MAAQ,CACTN,gBAAiB,GACjBD,gBAAiB,GACjBE,cAAe,GACf1B,MAAQ,KACRK,OAAQ,KACRS,SAAU,MATL,EADjB,gEAeQkB,KAAKF,SAAS,CACVL,gBAAiB,QACjBzB,QAAMK,SAAOS,WACbU,gBAAiBxB,EAAMC,QACvByB,cAAe1B,EAAMM,UAnBjC,+BAgCQ,OACI,yBAAKV,UAAU,OACZ,kBAAC,EAAD,CACEI,MAAOgC,KAAKD,MAAM/B,MAClBK,OAAQ2B,KAAKD,MAAM1B,OACnBS,SAAUkB,KAAKD,MAAMjB,SACrBW,gBAAiBO,KAAKD,MAAMN,gBACxCD,gBAAiBQ,KAAKD,MAAMP,gBAC5BE,cAAeM,KAAKD,MAAML,cACd/B,mBAAsBqC,KAAKrC,0BAzC5C,GAAyBsC,aCGLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.59d0336e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './sidenav.css';\n\n\n\n\nexport const SideNav = ({ handleSectionClick }) => {\n    return (\n        <div className=\"sidenav\">\n           \n            <img \n           src=\"https://avatars1.githubusercontent.com/u/37878595?s=400&u=5c129d62402943a1f4d6dd60f9f81b3eba8f083d&v=4\"\n            className=\"avatar\"\n            alt=\"avatar\"\n           \n            />\n\n<h2 className=\"main-name\">Shilpa Santpure</h2>\n            <p className=\"subtitle\">\"Website.Invent.Create\"</p>\n            <div className=\"sections-list\">\n                <p className=\"section-list-element\" onClick={ () => handleSectionClick(\"about\")}>About Me</p>\n                <p className=\"section-list-element\" onClick={ () => handleSectionClick(\"skills\")}>Skills</p>\n                <p className=\"section-list-element\" onClick={ () => handleSectionClick(\"projects\")}>Projects</p>\n        </div>\n        </div>\n    );\n};","export const about = {\r\n    heading: \"About Me\",\r\n    \"quote\": \"If you love life, don't waste time, \\nfor time is what life is made up of\",\r\n    \"bio\": \"An upcoming computer engineer and a developer by passion, a tech enthusiast,  bibliophile . I really like writing code.Especially in HTML,CSS,JavaScript and React too.\\n\\n Have keen interest to learn new technologies and excel in my field by contributing technical knowledge and strong analytical skills.\"\r\n};","import React from 'react';\r\n\r\nimport { about } from './../../constants/About';\r\nimport './about.css';\r\n\r\nexport const About =(props) => {\r\n    return(\r\n        <div className=\"about-container\">\r\n            {about.bio}\r\n        </div>\r\n    )\r\n}","export const skills = {\r\n    heading: \"Skills\",\r\n    quote: \"Build your skills, not your resume\",\r\n    techSkills: [\r\n        \"JavaScript\",\r\n        \"NodeJS\",\r\n        \"ReactJS\",\r\n        \"C++\",\r\n        \"C\",\r\n        \"Java\",\r\n        \"Python\",\r\n        \"HTML\",\r\n        \"CSS\",\r\n        \"MySQL\" ,\r\n        \"Git\",\r\n        \"GitHub\",\r\n        \"MongoDB\",\r\n    ],\r\n    industryKnowledge: [\r\n        \"Software\",\r\n        \"Marketing\",\r\n        \"Publicity\",\r\n        \"Blogging\",\r\n        \"Content Writing\",\r\n        \"Creative Writing\",\r\n        \"Web Content\",\r\n        \"Frontend\",\r\n        \"Software\",\r\n        \"Backend\",\r\n        \"Design\",\r\n        \"Web\",\r\n        \"Android\"\r\n    ],\r\n    \r\n    interpersonalSkills: [\r\n        \"Communication\",\r\n        \"Time Management\",\r\n        \"Leadership\",\r\n        \"Management\"\r\n    ]\r\n};","import React from 'react';\n\nimport './skill-card.css';\n\nexport const SkillCard = ({ skill }) => {\n    return (\n        <div className=\"skill-card\">\n            {skill}\n        </div>\n    )\n}","import React from 'react';\n\nimport {skills  } from './../../constants/Skills';\nimport { SkillCard } from './../SkillCard/SkillCard';\n\nimport './skills.css';\n\nexport const Skills = (props) => {\n    return (\n        <div className=\"skills-container\">\n            \n            <h3>Tech Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Interpersonal Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.interpersonalSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n        </div>\n    )\n}","export const projects = {\r\n    heading: \"Projects\",\r\n    quote: \"Ahh, Learning alone is boring, implementation is the real fun\",\r\n    projectList: [\r\n        {\r\n            name: \"Project 1\",\r\n            description:  \"A TodoList app using React, HTML, CSS and JavaScript.\",\r\n            link: \"https://github.com/santpureshilpa/new-to-do-app\"\r\n        }, {\r\n            name: \"Project 2\",\r\n            description: \"We have developed a new credit-based system for ration in Application.\",\r\n            link: \"https://github.com/santpureshilpa/sih_project\"\r\n        }, {\r\n            name: \"Project 3\",\r\n            description: \"Programmed first game project in JavaScript and HTML5 canvas.\",\r\n            link: \"https://github.com/santpureshilpa/tennis_game\"\r\n        }, {\r\n            name: \"Project 4\",\r\n            description: \"Developed an android application for tracking the user's current location using an android location services API.\",\r\n            link: \"https://github.com/santpureshilpa/bus_tracking_app\"\r\n            \r\n        }\r\n    ]\r\n}","import React from 'react'\n\nimport './project-card.css';\n\nexport const ProjectCard = ({ project }) => {\n    return (\n        <div className=\"project-card\">\n            <p><b>Name:</b> {project.name}</p>\n            <p><b>Description:</b> {project.description}</p>\n            <p><b>Link:</b> <a href={project.link}>{project.link}</a> </p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { projects } from './../../constants/Projects';\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\n\nimport './projects.css';\n\nexport const Projects = ({props}) => {\n    return (\n        <div className=\"projects-container\">\n           \n                {\n                    projects.projectList.map(project => <ProjectCard project={project} />)\n                }\n            </div>\n       \n    )\n}","import React from 'react';\n\nimport { About } from './../About/About';\nimport { Skills } from './../Skills/Skills';\nimport { Projects } from './../Projects/Projects';\n\nimport './section-container.css';\n\n\nexport const SectionContainer = ({about,skills,projects,selectedHeading,selectedSection,selectedQuote}) => { \n    \n    return (\n        <div className=\"section-container\">\n            <div className=\"section-heading-container\">\n    <h1 className=\"main-heading\">{selectedHeading}</h1>\n    <p className=\"main-quote\">{selectedQuote}</p>\n            </div>\n            <div className=\"section-component\">\n             \n            {\n                {\n                    about: <About/>,\n                    skills: <Skills />,\n                    projects: <Projects />\n                }[selectedSection]\n            }\n\n            </div>\n            \n        </div>\n    )\n}","import React from 'react';\r\n\r\n\r\n\r\nimport'./portfolio.css';\r\nimport { SideNav } from '../SideNav/SideNav';\r\nimport { SectionContainer } from \"./../SectionContainer/SectionContainer\";\r\n\r\nexport const Portfolio = ({handleSectionClick, about, skills, projects, selectedSection, selectedHeading,selectedQuote}) => {\r\n    \r\n    return(\r\n       <div className=\"portfolio-container\">\r\n           <div className=\"sidenav-container\">\r\n              <SideNav\r\n                 handleSectionClick={handleSectionClick}/>\r\n           </div>\r\n           <div className=\"main-section-container\">\r\n              <SectionContainer\r\n              about={about}\r\n              skills={skills}\r\n              projects={projects}\r\n              selectedSection={selectedSection}\r\n              selectedHeading={selectedHeading}\r\n              selectedQuote={selectedQuote}/>\r\n           </div>\r\n          \r\n       </div>\r\n    );\r\n};\r\n\r\n","import React, { Component } from 'react';\n\n\nimport './App.css';\nimport { Portfolio } from './Portfolio/Portfolio';\nimport {  about} from './../constants/About';\nimport { skills } from './../constants/Skills';\nimport { projects } from './../constants/Projects';\n\nexport class App extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            selectedSection: \"\",\n            selectedHeading: \"\",\n            selectedQuote: \"\",\n            about:  null,\n            skills: null,\n            projects: null,\n        };\n    }\n\n    componentDidMount(){\n        this.setState({\n            selectedSection: \"about\",\n            about,skills,projects,\n            selectedHeading: about.heading,\n            selectedQuote: about.quote\n        })\n    }\n\n    handleSectionClick = (sectionName) =>{\n        this.setState({\n            selectedSection: sectionName,\n            selectedHeading: this.state[sectionName].heading,\n            selectedQuote: this.state[sectionName].quote\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n               <Portfolio \n                 about={this.state.about}\n                 skills={this.state.skills}\n                 projects={this.state.projects}\n                 selectedSection={this.state.selectedSection}\n\t\t\t\t selectedHeading={this.state.selectedHeading}\n\t\t\t\t selectedQuote={this.state.selectedQuote}\n                 handleSectionClick = {this.handleSectionClick}/>\n            \n            \n            </div>\n        );\n    }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}